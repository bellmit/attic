import org.ajoberstar.grgit.Grgit

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath group: 'org.ajoberstar', name: 'gradle-git', version: '0.13.0-milestone.1'
        classpath group: 'com.jfrog.bintray.gradle', name: 'gradle-bintray-plugin', version: '1.4'
    }
}

plugins {
    id 'org.ajoberstar.release-opinion' version '1.3.2'
}

release {
    grgit = Grgit.open(projectDir)
}

allprojects {
    // No 'plugins {}' block permitted here. DSL limitation.
    apply plugin: 'idea'

    group = 'io.github.unacceptable'
    version = rootProject.version

    ext {
        isSnapshot = version.toString().contains("-dev")
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    // No 'plugins {}' block permitted here. DSL limitation.
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    sourceCompatibility = '1.8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-Xlint:all'
        options.compilerArgs << '-Werror'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    bintray {
        user = bintrayUsername
        key = bintrayApiKey

        publications = ['mavenJava']

        pkg {
            userOrg = 'unacceptable'
            repo = isSnapshot ? 'snapshots' : 'releases'
            publish = isSnapshot
            name = 'unacceptable'
            websiteUrl = 'https://github.com/unacceptable/unacceptable'
            issueTrackerUrl = 'https://github.com/unacceptable/unacceptable/issues'
            vcsUrl = 'https://github.com/unacceptable/unacceptable'
            licenses = ['MIT']
            publicDownloadNumbers = true
            version {
                name = project.version
            }
        }
    }
}
