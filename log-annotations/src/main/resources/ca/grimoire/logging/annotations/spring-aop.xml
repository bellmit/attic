<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean id="ca.grimoire.logging.annotations.MethodLoggingAdvice"
        class="ca.grimoire.logging.annotations.MethodLoggingAdvice" />

    <aop:config>
        <aop:pointcut id="ca.grimoire.logging.annotations.LogTargets"
            expression="execution(* *(..)) &amp;&amp; @annotation(logAnnotation)" />
        <aop:aspect
            ref="ca.grimoire.logging.annotations.MethodLoggingAdvice">
            <aop:before pointcut-ref="ca.grimoire.logging.annotations.LogTargets"
                arg-names="logAnnotation" method="logBefore" />
            <aop:after-returning
                pointcut-ref="ca.grimoire.logging.annotations.LogTargets"
                returning="returnValue" arg-names="logAnnotation, returnValue"
                method="logReturn" />
            <aop:after-throwing
                pointcut-ref="ca.grimoire.logging.annotations.LogTargets"
                throwing="exception" arg-names="logAnnotation, exception"
                method="logException" />
        </aop:aspect>
    </aop:config>
</beans>
